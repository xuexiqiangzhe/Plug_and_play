[Writable]
LogLevel = 'INFO'
    [Writable.StoreAndForward]
    Enabled = false
    RetryInterval = '5m'
    MaxRetryCount = 10

[Service]
BootTimeout = '30s'
ClientMonitor = '15s'
CheckInterval = '10s'
Host = 'localhost'
ServerBindAddr = "" # if blank, uses default Go behavior https://golang.org/pkg/net/#Listen
Port = 48095
Protocol = 'http'
ReadMaxLimit = 100
StartupMsg = 'This is a sample Filter/XML/MQTT Transform Application Service'
Timeout = '30s'

[Registry]
Host = 'localhost'
Port = 8500
Type = 'consul'

[Logging]
EnableRemote = false
File = './logs/simple-filter-xml-mqtt.log'

# Database is require when Store and Forward is enabled
[Database]
Type = "redisdb"
Host = "localhost"
Port = 6379
Timeout = "30s"
Username = ""
Password = ""

# SecretStore is required when Store and Forward is enabled and running with security
# so Databse credentails can be pulled from Vault.
[SecretStore]
  Host = 'localhost'
  Port = 8200
  Path = '/v1/secret/edgex/application-service/'
  Protocol = 'https'

  [SecretStore.Authentication]
  AuthType = 'X-Vault-Token'
  AuthToken = 'edgex'

[Clients]
  [Clients.CoreData]
  Protocol = 'http'
  Host = 'localhost'
  Port = 48080

  [Clients.Logging]
  Protocol = "http"
  Host = "localhost"
  Port = 48061

[MessageBus]
Type = 'zero'
    [MessageBus.PublishHost]
        Host = '*'
        Port = 5564
        Protocol = 'tcp'
    [MessageBus.SubscribeHost]
        Host = 'localhost'
        Port = 5563
        Protocol = 'tcp'

# Choose either an HTTP trigger or MessageBus trigger (aka Binding)

#[Binding]
#Type="http"

[Binding]
Type="messagebus"
SubscribeTopic="events"
PublishTopic="somewhere"

[ApplicationSettings]
DeviceNames = "OPCUA-Device01"
DeviceNames2 = "OPCUA-Device02"